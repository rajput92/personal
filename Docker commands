docker image ls
docker image pull alpine:latest : pull image alpine with latest tag

docker image pull -a nigelpoulton/tu-demo : pull image tu-demo with all tags

docker image pull nigelpoulton/tu-demo:v2 : pull image tu-demo from nigelpoulton repo with v2 tag

docker image ls --filter dangling=true : dangling images

docker image prune : removes dangling images

docker image prune -a : Docker will also remove all unused images (those not in use by any containers).

docker image ls --filter=reference="*:latest" or docker image ls --filter reference="*:latest"

docker image ls --format "{{.Size}}"

docker image ls --format "{{.Repository}}: {{.Tag}}: {{.Size}}"

docker search nigelpoulton

docker search alpine --filter "is-official=true" or docker search alpine --filter is-official=true

docker search alpine --filter "is-automated=true"

docker image inspect ubuntu:latest : 

doscker history ubuntu

docker image ls --digests

docker image ls --digests alpine

docker image pull alpine@sha256:c0537...7c0a7726c88e2bb7584dc96

docker container run --rm golang go version : run the container with go coomand and show version and remove it (--rm ) once exists 

docker image rm $(docker image ls -q) -f   : -q : only ids(quiet) -f : filter format

service docker status

systemctl is-active docker

docker container ls (only running container)

docker container ls -a (all ones)

docker container pause ...

docker container stop ... (we can pass more than one container in stop command)

docker container run -it ubuntu:latest /bin/bash

docker container exec -it 3027eb644874 bash : try to run with -t or -i not -it

docker container run --name percy -it ubuntu:latest /bin/bash

docker container run --name neversaydie -it --restart always alpine sh

docker container run -d â€“name webserver -p 80:8080 \ nigelpoulton/

docker container rm $(docker container ls -aq) -f : here -f is filter, filter output based on condition

docker image build -t web:latest .

docker image tag web:latest nigelpoulton/web:latest

docker image push nigelpoulton/web:latest

docker image history web:latest : to view the history of build of images layers eith commands

docker container run -d alpine : why this command is not starting conatiner and exited after creating container, because we have not attached terminal (-t) to it.

docker-compose up &

docker-compose -f prod-equus-bass.yml up

docker-compose -f prod-equus-bass.yml up -d

docker network ls

docker volume ls

docker-compose down

docker-compose up -d

docker-compose ps

docker-compose top : The PID numbers returned are the PID numbers as seen from the Docker host (not from within the containers).

docker-compose restart

docker-compose rm : to delete stopped container

docker-compose down : stop and delete 

docker vloume inspect : show the details like creations and location of mounting

docker volume inspect | grep Mount

docker service create --name uber-svc --network uber-net -p 80:80 --replicas 12 nigelpoulton/tu-demo:v1

docker service update --image nigelpoulton/tu-demo:v2 --update-parallelism 2 --update-delay 20s uber-svc

