MAven installation :

prerequistie: JDK

download folder --> extract to folder /usr/local/maven/.--> add PATH : M2_HOME/bin and M2_HOME

Path varible directs to command and enviornment variable is a alias for that

GOAL IS A COMMAND

mvn archetype:genrate

parameters : groupID, artifactID, version, package

GroupID : hierarrichal location in project folder 

artifactID : identifier for project

compilation will create a class file in target directory

The compiled code is placed in the "target" directory. The target directory will contain the compiled artifact (that is, a JAR file for a Java project by default) along with directories for compiled classes and tests. It will further contain the pom.properties file along with test reports and temporary files.

PARTS OF POM :

BASIC : project related dependecies, inheritance, artifact group id related to project, project level properties(configuration)

BUILD : plugins related info, i.e. build details

PROJECT METADATA : name, organization, developers, URL, inception year,

ENV '; This section contains all information regarding the environment including details of the version control being, issue management, continuous integration, mailing lists, repositories, and so on.

The build lifecycle explicitly defines the process of building, testing, distributing an artifact, and is at the heart of every Maven project.

3 LIFECYCLE MAVEN :

DEFAULT :

Phases:
validate : validate if project info is correct or not
compile : compiles the source code using java c and make .class files in /target folder
test : test the unit test cases from src/test and reports are genrated in /target folder
package : into a jar, war, ear 
integration -test : processes the package in the integration-test environment
verify : verifiaction of package if its in a correct format
install : installs the package in local maven project repo
Deploy: installs the final package in a remote repository

Whenever you execute a build phase, all prior build phases are executed sequentially. Hence, executing mvn integration-test will execute the validate, compile, test, and package build phases before executing the integration-test build phase.

Maven enviornment settings is usefull to create artifacts for different ENV, with the help of build profiles

Build profiles are separate configuration which can be mentioned in 3 ways in pom.xml or settings.xml, based on which mvn will artifacts

A Build profile is a set of configuration values, which can be used to set or override default values of Maven build. Using a build profile, you can customize build for different environments such as Production v/s Development environments.

CAN BE DEFINED:
PEr project pom.xml
Per USER ~/.m2/settings.xml
GLOBAL M2_HOME/conf/settings.xml

mvn install -P profile_name : to install package with Profile_name configuration

PHASE IS A DIFFERENT THING AND GOAL IS DIFFERENT





